---
#

- name: update environment variables  
  replace: 'dest="{{compose.path}}/docker-compose.yml" regexp="{{item.key}}=$" replace="{{item.key}}={{item.value}}"'
  with_dict: "{{ compose.env | default({}) }}"

- name: set nginx parameters
  replace: 'dest="{{compose.path}}/nginx/nginx.conf" regexp="{{item.key}}" replace="{{item.value}}"'
  with_dict: "{{ compose.nginx | default({}) }}"

- name: build images
  when: create or new_compose.changed
  command: docker-compose build --pull
  register: compose_build
  args:
    chdir: "{{ compose.path }}"

#- name: stop running containers
#  when: compose_build.changed
#  command: docker-compose stop
#  register: compose_stop
#  changed_when: compose_stop.stdout_lines
#  args:
#    chdir: "{{ compose.path }}"  

#- name: remove existing containers
#  when: compose_stop.changed
#  command: docker-compose rm -f
#  register: compose_remove
#  changed_when: "compose_remove.stdout_lines"
#  args:
#    chdir: "{{ compose.path }}"

- name: up containers
  command: docker-compose up -d
  register: compose_up
  args:
    chdir: "{{ compose.path }}"
  changed_when: compose_up.stdout_lines
  

